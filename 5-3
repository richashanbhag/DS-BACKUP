#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define MAX 100

char stack[MAX][MAX];
int top = -1;

void push(char* str) {
    if (top == MAX - 1)
        printf("Stack overflow\n");
    else
        strcpy(stack[++top], str);
}

char* pop() {
    if (top == -1) {
        printf("Stack underflow\n");
        return NULL;
    } else
        return stack[top--];
}

void postfixToInfix(char* postfix) {
    char c, operand1[MAX], operand2[MAX], expr[MAX];
    int i = 0;

    while ((c = postfix[i++]) != '\0') {
        if (isalnum(c)) {
            char operand[2] = {c, '\0'};
            push(operand);
        } else {
            strcpy(operand2, pop());
            strcpy(operand1, pop());
            sprintf(expr, "(%s%c%s)", operand1, c, operand2);
            push(expr);
        }
    }
    printf("Fully Parenthesized Infix Expression: %s\n", pop());
}

int main() {
    char postfix[MAX];
    printf("Enter a postfix expression: ");
    scanf("%s", postfix);
    postfixToInfix(postfix);
    return 0;
}
