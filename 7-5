#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}


void push(struct Node** top, int data) {
    struct Node* newNode = createNode(data);
    newNode->next = *top;
    *top = newNode;
}

void pop(struct Node** top) {
    if (*top == NULL) {
        printf("Stack is empty\n");
        return;
    }
    struct Node* temp = *top;
    *top = (*top)->next;
    free(temp);
    printf("Popped from stack\n");
}

void displayStack(struct Node* top) {
    if (top == NULL) {
        printf("Stack is empty\n");
        return;
    }
    while (top != NULL) {
        printf("%d -> ", top->data);
        top = top->next;
    }
    printf("NULL\n");
}


void enqueue(struct Node** front, struct Node** rear, int data) {
    struct Node* newNode = createNode(data);
    if (*rear == NULL) {
        *front = *rear = newNode;
        return;
    }
    (*rear)->next = newNode;
    *rear = newNode;
    printf("Enqueued to queue\n");
}

void dequeue(struct Node** front, struct Node** rear) {
    if (*front == NULL) {
        printf("Queue is empty\n");
        return;
    }
    struct Node* temp = *front;
    *front = (*front)->next;
    if (*front == NULL) *rear = NULL;
    free(temp);
    printf("Dequeued from queue\n");
}

void displayQueue(struct Node* front) {
    if (front == NULL) {
        printf("Queue is empty\n");
        return;
    }
    while (front != NULL) {
        printf("%d -> ", front->data);
        front = front->next;
    }
    printf("NULL\n");
}

int main() {
    struct Node* stack = NULL;
    struct Node *queueFront = NULL, *queueRear = NULL;
    int choice, element, structureType;

    while (1) {
        printf("\nMenu:\n");
        printf("1. Stack Operations\n");
        printf("2. Queue Operations\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        if (choice == 3) break;

        switch (choice) {
            case 1:
                printf("\nStack Operations:\n");
                printf("1. Push\n");
                printf("2. Pop\n");
                printf("3. Display Stack\n");
                printf("4. Back\n");
                printf("Enter your choice: ");
                scanf("%d", &structureType);

                switch (structureType) {
                    case 1:
                        printf("Enter element to push: ");
                        scanf("%d", &element);
                        push(&stack, element);
                        break;
                    case 2:
                        pop(&stack);
                        break;
                    case 3:
                        displayStack(stack);
                        break;
                    case 4:
                        break;
                    default:
                        printf("Invalid choice\n");
                }
                break;

            case 2:
                printf("\nQueue Operations:\n");
                printf("1. Enqueue\n");
                printf("2. Dequeue\n");
                printf("3. Display Queue\n");
                printf("4. Back\n");
                printf("Enter your choice: ");
                scanf("%d", &structureType);

                switch (structureType) {
                    case 1:
                        printf("Enter element to enqueue: ");
                        scanf("%d", &element);
                        enqueue(&queueFront, &queueRear, element);
                        break;
                    case 2:
                        dequeue(&queueFront, &queueRear);
                        break;
                    case 3:
                        displayQueue(queueFront);
                        break;
                    case 4:
                        break;
                    default:
                        printf("Invalid choice\n");
                }
                break;

            default:
                printf("Invalid choice\n");
        }
    }

    return 0;
}
