#include<stdio.h>
#define MAX_SIZE 100

int queue[MAX_SIZE];
int front = -1, rear = -1;

void enqueue(int element) {
    if (((rear + 1) % MAX_SIZE) == front) {
        printf("Queue is full\n");
    } else if (rear == -1 && front == -1) { 
        rear = 0;
        front = 0;
        queue[rear] = element;
    } else {
        rear = (rear + 1) % MAX_SIZE;
        queue[rear] = element;
    }
}

int dequeue() {
    if (rear == -1 && front == -1) {
        printf("Queue is empty\n");
    } else if (front == rear) { 
        printf("The deleted element is %d\n", queue[front]);
        front = -1;
        rear = -1;
        return queue[front];
    } else {
        printf("The deleted element is %d\n", queue[front]);
        front = (front + 1) % MAX_SIZE;
        return queue[front];
    }
}

void display() {
    int i;
    if (front == -1 && rear == -1) {
        printf("Queue is empty\n");
    } else {
        printf("Elements are:\n");
        i = front;
        while (i != rear) {
            printf("%d\t", queue[i]);
            i = (i + 1) % MAX_SIZE;
        }
        printf("%d\t", queue[rear]);
        printf("\n");
    }
}

int main() {
    int element;
    int ch;
    while (1) {
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter choice: ");
        scanf("%d", &ch);
        switch (ch) {
            case 1:
                printf("Enter element: ");
                scanf("%d", &element);
                enqueue(element);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                return 0;
            default:
                printf("Invalid choice\n");
        }
    }
    return 0;
}
