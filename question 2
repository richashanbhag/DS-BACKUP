#include <stdio.h>

#define MAX 100

 struct Element{
    int row;
    int col;
    int value;
};

void fastTranspose(struct Element original[],struct Element transpose[]) {
    int rowTerms[MAX], startingPos[MAX];
    int i, j, numCols = original[0].col, numTerms = original[0].value;

    for (i = 0; i < numCols; i++)
        rowTerms[i] = 0;

    for (i = 1; i <= numTerms; i++)
        rowTerms[original[i].col]++;

    startingPos[0] = 1;
    for (i = 1; i < numCols; i++)
        startingPos[i] = startingPos[i - 1] + rowTerms[i - 1];


    for (i = 1; i <= numTerms; i++) {
        j = startingPos[original[i].col]++;
        transpose[j].row = original[i].col;
        transpose[j].col = original[i].row;
        transpose[j].value = original[i].value;
    }

    transpose[0].row = original[0].col;
    transpose[0].col = original[0].row;
    transpose[0].value = original[0].value;
}

int main() {
struct    Element original[MAX], transpose[MAX];
    int i, n;

    printf("Enter the number of non-zero elements: ");
    scanf("%d", &n);

    printf("Enter number of rows and columns of the sparse matrix: ");
    scanf("%d %d", &original[0].row, &original[0].col);
    original[0].value = n;

    printf("Enter the row, column, and value of each non-zero element:\n");
    for (i = 1; i <= n; i++) {
        scanf("%d %d %d", &original[i].row, &original[i].col, &original[i].value);
    }

    fastTranspose(original, transpose);
    printf("\nTransposed matrix:\n");
    for (i = 0; i <= n; i++) {
        printf("%d %d %d\n", transpose[i].row, transpose[i].col, transpose[i].value);
    }

    return 0;
}
